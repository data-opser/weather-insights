name: linters

on:
  pull_request:
    branches:
      - main

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    name: Get changed files
    permissions:
      pull-requests: read
    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Save changed files to environment
        run: echo "ALL_CHANGED_FILES=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_ENV

  kotlint-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for Kotlin files
        id: check_kt_files
        run: |
          kt_files=$(echo "${{ env.ALL_CHANGED_FILES }}" | grep '\.kt')
          if [ -z "$kt_files" ]; then
            echo "No Kotlin files found"
            exit 1
          else
            echo "Kotlin files: $kt_files"
            echo "kt_files=$kt_files" >> $GITHUB_ENV
          fi

      - name: Install Ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.48.2/ktlint &&
          chmod a+x ktlint &&
          sudo mv ktlint /usr/local/bin/

      - name: Run Ktlint on changed Kotlin files
        run: |
          echo "$kt_files" | xargs ktlint
        continue-on-error: true

  javascript-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for JavaScript files
        id: check_js_files
        run: |
          js_files=$(echo "${{ env.ALL_CHANGED_FILES }}" | grep '\.js')
          if [ -z "$js_files" ]; then
            echo "No JavaScript files found"
            exit 1
          else
            echo "JavaScript files: $js_files"
            echo "js_files=$js_files" >> $GITHUB_ENV
          fi

      - name: Install Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"

      - name: Install ESLint
        run: |
          cd frontend
          npm ci

      - name: Run ESLint on changed JavaScript files
        run: |
          echo "$js_files" | xargs npx eslint --config frontend/eslint.config.mjs
        continue-on-error: true

  python-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for Python files
        id: check_py_files
        run: |
          py_files=$(echo "${{ env.ALL_CHANGED_FILES }}" | grep '\.py')
          if [ -z "$py_files" ]; then
            echo "No Python files found"
            exit 1
          else
            echo "Python files: $py_files"
            echo "py_files=$py_files" >> $GITHUB_ENV
          fi

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8 on changed Python files
        run: |
          echo "$py_files" | xargs flake8
        continue-on-error: true

  sql-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for SQL files
        id: check_sql_files
        run: |
          sql_files=$(echo "${{ env.ALL_CHANGED_FILES }}" | grep '\.sql')
          if [ -z "$sql_files" ]; then
            echo "No SQL files found"
            exit 1
          else
            echo "SQL files: $sql_files"
            echo "sql_files=$sql_files" >> $GITHUB_ENV
          fi

      - name: Install SQL Fluff
        run: |
          pip install sqlfluff

      - name: Run SQL Fluff on changed SQL files
        run: |
          echo "$sql_files" | xargs sqlfluff lint --config .sqlfluff
        continue-on-error: true

  yaml-yml-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for YAML/YML files
        id: check_yml_yaml_files
        run: |
          yml_files=$(echo "${{ env.ALL_CHANGED_FILES }}" | grep -E '\.yml|\.yaml')
          if [ -z "$yml_files" ]; then
            echo "No YAML files found"
            exit 1
          else
            echo "YAML files: $yml_files"
            echo "yml_files=$yml_files" >> $GITHUB_ENV
          fi

      - name: Install Yamllint
        run: |
          pip install yamllint

      - name: Run Yamllint on changed YAML and YML files
        run: |
          echo "$yml_files" | xargs yamllint -d "{extends: default, rules: {line-length: disable}}"
        continue-on-error: true

  html-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Run htmltest
        uses: wjdp/htmltest-action@master
        with:
          path: .
        continue-on-error: true
