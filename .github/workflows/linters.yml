name: linters

on:
  pull_request:
    branches:
      - main

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    name: Get changed-files
    permissions:
      pull-requests: read

    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Set output for ALL_CHANGED_FILES
        run: echo "::set-output name=ALL_CHANGED_FILES::${{ steps.changed-files.outputs.all_changed_files}}"
    outputs:
      ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}

  kotlint-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for Kotlin files
        run: |
          kt_files=$(echo "${{ needs.get-changed-files.outputs.ALL_CHANGED_FILES }}" | grep '\.kt')
          echo "KT_FILES=$kt_files" >> $GITHUB_ENV
          if [ -z "$kt_files" ]; then
            echo "No Kotlin files found"
            exit 1
          else
            echo "Changed Kotlin files: $kt_files"
          fi

      - name: Install Ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.48.2/ktlint &&
          chmod a+x ktlint &&
          sudo mv ktlint /usr/local/bin/

      - name: Run Ktlint on changed Kotlin files
        if: env.KT_FILES
        run: |
          echo "$KT_FILES" | xargs ktlint
        continue-on-error: true

  javascript-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for JavaScript files
        run: |
          js_files=$(echo "${{ needs.get-changed-files.outputs.ALL_CHANGED_FILES }}" | grep '\.js')
          echo "JS_FILES=$js_files" >> $GITHUB_ENV
          if [ -z "$js_files" ]; then
            echo "No JavaScript files found"
            exit 1
          else
            echo "Changed JavaScript files: $js_files"
          fi

      - name: Install Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"

      - name: Install ESLint
        run: |
          cd frontend
          npm ci

      - name: Run ESLint on changed JavaScript files
        if: env.JS_FILES
        run: |
          echo "$JS_FILES" | xargs npx eslint --config frontend/eslint.config.mjs
        continue-on-error: true

  python-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for Python files
        run: |
          py_files=$(echo "${{ needs.get-changed-files.outputs.ALL_CHANGED_FILES }}" | grep '\.py')
          echo "PY_FILES=$py_files" >> $GITHUB_ENV
          if [ -z "$py_files" ]; then
            echo "No Python files found"
            exit 1
          else
            echo "Changed Python files: $py_files"
          fi

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8 on changed Python files
        if: env.PY_FILES
        run: |
          echo "$PY_FILES" | xargs flake8
        continue-on-error: true

  sql-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for SQL files
        run: |
          sql_files=$(echo "${{ needs.get-changed-files.outputs.ALL_CHANGED_FILES }}" | grep '\.sql')
          echo "SQL_FILES=$sql_files" >> $GITHUB_ENV
          if [ -z "$sql_files" ]; then
            echo "No SQL files found"
            exit 1
          else
            echo "Changed SQL files: $sql_files"
          fi

      - name: Install SQL Fluff
        run: |
          pip install sqlfluff

      - name: Run SQL Fluff on changed SQL files
        if: env.SQL_FILES
        run: |
          echo "$SQL_FILES" | xargs sqlfluff lint --config .sqlfluff
        continue-on-error: true

  yaml-yml-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Check for YAML/YML files
        run: |
          yml_yaml_files=$(echo "${{ needs.get-changed-files.outputs.ALL_CHANGED_FILES }}" | grep -E '\.yml|\.yaml')
          echo "YML_YAML_FILES=$yml_yaml_files" >> $GITHUB_ENV
          if [ -z "$yml_yaml_files" ]; then
            echo "No YAML/YML files found"
            exit 1
          else
            echo "Changed YAML/YML files: $yml_yaml_files"
          fi

      - name: Install Yamllint
        run: |
          pip install yamllint

      - name: Run Yamllint on changed YAML and YML files
        if: env.YML_YAML_FILES
        run: |
          echo "$YML_YAML_FILES" | xargs yamllint -d "{extends: default, rules: {line-length: disable}}"
        continue-on-error: true

  html-linter:
    runs-on: ubuntu-latest
    needs: get-changed-files
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Run htmltest
        uses: wjdp/htmltest-action@master
        with:
          path: .
        continue-on-error: true
